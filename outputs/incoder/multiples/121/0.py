
def multiples():
    """
    If we list all the natural numbers below 15 that are multiples of 3 or 5, we get 3, 5, 6, 9, 10 and 12. The product of these multiples is 97200.
    Return the product of all the multiples of 3 or 5 below 500.
    """    
    
    multiples = []
    
    for i in range(1, 501):
        if i % 3 == 0 or i % 5 == 0:
            multiples.append(i)
            
    return sum(multiples)

# Problem 3
def fibonacci():
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    """
    
    fib = [1, 2]
    
    for i in range(3, 5000000):
        if fib[-1] < 4000000:
            fib.append(fib[-1] + fib[-2])
        else:
            fib.append(fib[-2])
            
    return sum(fib[1::2])

# Problem 4
def fibonacci_sum():
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    """
    
    fib = [1, 2]
    
    for i in range(3, 5000000):
        if fib[-1] < 4000000:
            fib.append(fib[-1] + fib[-2])
        else:
            fib.append(fib[-2])
            
    return sum(fib[1::2])

# Problem 5
def fibonacci_sum_2():
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    """
    
    fib = [1, 2]
    
    for i in range(3, 5000000):
        if fib[-1] < 4000000:
            fib.append(fib[-1] + fib[-2])
        else:
            fib.append(fib[-2])
            
    return sum(fib[1::2])

# Problem 6
def fibonacci_sum_3():
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the term
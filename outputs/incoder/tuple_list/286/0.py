
def fibonacci(lst):
    """
    Given a list of tuples, write a function that returns the twelfth value of the tuple with the largest last value.
    """
    lst = sorted(lst)
    return lst[-2][1]

# Test Cases
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13)]) == 13
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13), (13, 21), (21, 34)]) == 34
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13), (13, 21), (21, 34), (34, 55)]) == 55
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13), (13, 21), (21, 34), (34, 55), (55, 89)]) == 89
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13), (13, 21), (21, 34), (34, 55), (55, 89), (89, 143)]) == 143
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13), (13, 21), (21, 34), (34, 55), (55, 89), (89, 143), (143, 233)]) == 233
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13), (13, 21), (21, 34), (34, 55), (55, 89), (89, 143), (143, 233), (233, 376)]) == 233
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13), (13, 21), (21, 34), (34, 55), (55, 89), (89, 143), (143, 233), (233, 376), (376, 610)]) == 610
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13), (13, 21), (21, 34), (34, 55), (55, 89), (89, 143), (143, 233), (233, 376), (376, 610), (610, 987)]) == 987
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13), (13, 21), (21, 34), (34, 55), (55, 89), (89, 143), (143, 233), (233, 376), (376, 610), (610, 987), (987, 1597)]) == 1597
assert fibonacci([(1, 2), (2, 3), (3, 5), (5, 8), (8, 13), (13, 21), (21, 34), (34, 55), (55, 89), (89, 143), (143, 233), (233, 376), (376, 610), (610, 987), (987, 1597), (1597, 2584)]) == 2584
assert fibon
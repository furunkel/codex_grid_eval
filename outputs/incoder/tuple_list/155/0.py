
def min_max(lst):
    """
    Given a list of tuples, write a function that returns the third value of the tuple with the largest first value.
    """
    return max(lst, key=lambda x:x[0])[2]

# Test Cases
print(min_max([(5,4,3), (5,5,3), (5,6,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3), (5,10,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3), (5,10,3), (5,11,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3), (5,10,3), (5,11,3), (5,12,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3), (5,10,3), (5,11,3), (5,12,3), (5,13,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3), (5,10,3), (5,11,3), (5,12,3), (5,13,3), (5,14,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3), (5,10,3), (5,11,3), (5,12,3), (5,13,3), (5,14,3), (5,15,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3), (5,10,3), (5,11,3), (5,12,3), (5,13,3), (5,14,3), (5,15,3), (5,16,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3), (5,10,3), (5,11,3), (5,12,3), (5,13,3), (5,14,3), (5,15,3), (5,16,3), (5,17,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3), (5,10,3), (5,11,3), (5,12,3), (5,13,3), (5,14,3), (5,15,3), (5,16,3), (5,17,3), (5,18,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,7,3), (5,8,3), (5,9,3), (5,10,3), (5,11,3), (5,12,3), (5,13,3), (5,14,3), (5,15,3), (5,16,3), (5,17,3), (5,18,3), (5,19,3)]))
print(min_max([(5,4,3), (5,5,3), (5,6,3), (5,
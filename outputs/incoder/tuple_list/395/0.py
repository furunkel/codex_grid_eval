
def min_max(lst):
    """
    Given a list of tuples, write a function that returns the last value of the tuple with the largest third value.
    """
    return max(lst, key=lambda t: t[2])

# Test Cases
assert min_max([(7, 3, 9), (6, 2, 8), (5, 1, 7), (4, 0, 6), (3, 2, 5), (7, 4, 8), (6, 3, 7), (5, 2, 6), (4, 1, 5), (3, 2, 4), (7, 3, 8), (6, 2, 7), (5, 1, 6), (4, 0, 5), (3, 2, 3), (7, 4, 7), (6, 3, 6), (5, 2, 5), (4, 1, 4), (3, 2, 2), (7, 3, 9), (6, 2, 8), (5, 1, 7), (4, 0, 6), (3, 2, 5), (7, 4, 8), (6, 3, 7), (5, 2, 6), (4, 1, 5), (3, 2, 4), (7, 3, 8), (6, 2, 7), (5, 1, 6), (4, 0, 5), (3, 2, 3), (7, 4, 7), (6, 3, 6), (5, 2, 5), (4, 1, 4), (3, 2, 2), (7, 3, 9), (6, 2, 8), (5, 1, 7), (4, 0, 6), (3, 2, 5), (7, 4, 8), (6, 3, 7), (5, 2, 6), (4, 1, 5), (3, 2, 4), (7, 3, 8), (6, 2, 7), (5, 1, 6), (4, 0, 5), (3, 2, 3), (7, 4, 7), (6, 3, 6), (5, 2, 5), (4, 1, 4), (3, 2, 2), (7, 3, 9), (6, 2, 8), (5, 1, 7), (4, 0, 6), (3, 2, 5), (7, 4, 8), (6, 3, 7), (5, 2, 6), (4, 1, 5), (3, 2, 4), (7, 3, 8), (6, 2, 7), (5, 1, 6), (4, 0, 5), (3, 2, 3), (7, 4, 7), (6, 3, 6), (5, 2, 5), (4, 1, 4), (3, 2, 2), (7, 3, 9), (6, 2, 8), (5, 1, 7), (4, 0, 6), (3, 2, 5), (7, 4, 8), (6, 3, 7), (5, 2, 6), (4, 1, 5), (3, 2, 4), (7, 3, 8), (6, 2, 7), (5, 1, 6), (4, 0, 5), (3, 2, 3), (7, 4, 7), (6, 3, 6), (5, 2, 5), (4, 1, 4), (3, 2, 2), (7, 3, 9), (6, 2, 8), (5, 1, 7), (4, 0, 6), (3, 2, 5), (7, 4, 8), (6, 3, 7), (5, 2, 6), (4, 1, 5), (3, 2, 4), (7, 3, 8), (6, 2, 7), (5, 1, 6), (4, 0, 5), (3, 2, 3), (7, 4, 7), (6, 3, 6), (5, 2, 5), (4, 1, 4), (3, 2, 2), (7, 3, 9), (6, 2, 8), (5, 1, 7), (4, 0, 6), (3, 2, 5), (7, 4, 8), (6, 3, 7), (5, 2, 6), (4, 1, 5), (3, 2, 4), (7, 3, 8), (6, 2, 7), (5, 1, 6), (
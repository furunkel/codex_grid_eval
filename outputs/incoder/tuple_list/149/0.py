
def min_max(lst):
    """
    Given a list of tuples, write a function that returns the third value of the tuple with the smallest first value.
    """
    return min(lst)[2]

# Test Cases
print(min_max([(4,5,6),(1,2,3),(7,8,9)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12),(13,14,15)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12),(13,14,15),(16,17,18)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12),(13,14,15),(16,17,18),(19,20,21)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12),(13,14,15),(16,17,18),(19,20,21),(22,23,24)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12),(13,14,15),(16,17,18),(19,20,21),(22,23,24),(25,26,27)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12),(13,14,15),(16,17,18),(19,20,21),(22,23,24),(25,26,27),(28,29,30)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12),(13,14,15),(16,17,18),(19,20,21),(22,23,24),(25,26,27),(28,29,30),(31,32,33)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12),(13,14,15),(16,17,18),(19,20,21),(22,23,24),(25,26,27),(28,29,30),(31,32,33),(34,35,36)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12),(13,14,15),(16,17,18),(19,20,21),(22,23,24),(25,26,27),(28,29,30),(31,32,33),(34,35,36),(37,38,39)]))
print(min_max([(4,5,6),(1,2,3),(7,8,9),(10,11,12),(13,14,15),(16,17,18),(19,20,21),(22,23,24),(25,26,27),
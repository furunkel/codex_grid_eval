
def min_max(lst):
    """
    Given a list of tuples, write a function that returns the last value of the tuple with the largest first value.
    """
    return max(lst)[1]

# Test Cases
print(min_max([(3,5), (1,2), (4,6)]))
print(min_max([(3,5), (1,2), (4,6), (7,8)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14), (15,16)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22), (23,24)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22), (23,24), (25,26)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22), (23,24), (25,26), (27,28)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22), (23,24), (25,26), (27,28), (29,30)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22), (23,24), (25,26), (27,28), (29,30), (31,32)]))
print(min_max([(3,5), (1,2), (4,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22), (23,24), (25,26), (27,

def f(lst):
    """
    Given a list of tuples, write a function that returns the last value of the tuple with the smallest first value.
    """
    lst = sorted(lst)
    return lst[-1][1]

# Tests
assert f([(1, 2), (3, 4)])  == 4
assert f([(1, 2), (3, 5), (4, 6)])  == 6
assert f([(1, 2), (3, 5), (4, 6), (7, 8)])  == 8
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10)])  == 10
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12)])  == 12
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12), (13, 14)])  == 14
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16)])  == 16
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18)])  == 18
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20)])  == 20
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 22)])  == 22
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 22), (23, 24)])  == 24
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 22), (23, 24), (25, 26)])  == 26
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 22), (23, 24), (25, 26), (27, 28)])  == 28
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 22), (23, 24), (25, 26), (27, 28), (29, 30)])  == 30
assert f([(1, 2), (3, 5), (4, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 22), (23, 24), (25, 26), (27, 28), (29, 30), (31, 32)])  == 32
assert 
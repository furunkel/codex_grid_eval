
def fibonacci(lst):
    """
    Given a list of tuples, write a function that returns the last value of the tuple with the largest third value.
    """
    return max(lst)[2]

# Test Cases
print(fibonacci([(5,), (1,), (3,), (2,), (4,)]))
print(fibonacci([(5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,), (2,), (4,), (5,), (1,), (3,
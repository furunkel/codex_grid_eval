
def extract_value(lst):
    """
    Given a list of tuples, write a function that returns the last value of the tuple with the largest last value.
    """
    return max(lst)[-1]

# Test Cases
print(extract_value([]))
print(extract_value([(5,), (10,)]))
print(extract_value([(5,), (10,), (20,)]))
print(extract_value([(5,), (10,), (20,), (30,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,), (80,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,), (80,), (90,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,), (80,), (90,), (100,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,), (80,), (90,), (100,), (110,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,), (80,), (90,), (100,), (110,), (120,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,), (80,), (90,), (100,), (110,), (120,), (130,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,), (80,), (90,), (100,), (110,), (120,), (130,), (140,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,), (80,), (90,), (100,), (110,), (120,), (130,), (140,), (150,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,), (80,), (90,), (100,), (110,), (120,), (130,), (140,), (150,), (160,)]))
print(extract_value([(5,), (10,), (20,), (30,), (40,), (50,), (60,), (70,), (80,), (90,), (100,), (110,), (120,), (130,), (140,), (150,), (160,), (170,)
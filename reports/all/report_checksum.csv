offset_char,mod,result_emojis,result,model_input,failed_inputs,errors,incoder_result,incoder_result_emojis,errors,failed_inputs,codeparrot_result,codeparrot_result_emojis,errors,failed_inputs
the space character,64,✅✅✅,ppp,input/codex/checksum/0.txt,[],[],ppp,✅✅✅,[],[],fff,❌❌❌,[],"[[""'6'"", ""51""], [""'F'"", ""35""], [""'N'"", ""51""]]"
the space character,128,✅✅✅,ppp,input/codex/checksum/1.txt,[],[],ppp,✅✅✅,[],[],fee,❌💀💀,"[""invalid literal for int() with base 10: 'a'"", ""invalid literal for int() with base 10: 'f'""]","[[""'6'"", ""6""]]"
the space character,256,✅✅✅,ppp,input/codex/checksum/2.txt,[],[],ppp,✅✅✅,[],[],eee,💀💀💀,"[""string index out of range"", ""string index out of range"", ""string index out of range""]",[]
the newline character,64,✅✅✅,ppp,input/codex/checksum/3.txt,[],[],ppp,✅✅✅,[],[],fff,❌❌❌,[],"[[""' '"", ""6""], [""'0'"", ""22""], [""'8'"", ""62""]]"
the newline character,128,✅✅✅,ppp,input/codex/checksum/4.txt,[],[],fff,❌❌❌,[],"[[""' '"", ""'\\x96'""], [""'0'"", ""'\u00a6'""], [""'x'"", ""'\u00ee'""]]",fff,❌❌❌,[],"[[""' '"", ""22""], [""'0'"", ""38""], [""'x'"", ""110""]]"
the newline character,256,✅✅✅,ppp,input/codex/checksum/5.txt,[],[],ppp,✅✅✅,[],[],eee,💀💀💀,"[""string index out of range"", ""string index out of range"", ""string index out of range""]",[]
uppercase X,64,✅✅✅,ppp,input/codex/checksum/6.txt,[],[],fff,❌❌❌,[],"[[""'n'"", ""'V'""], [""'~'"", ""'f'""], [""'\\x86'"", ""'n'""]]",fff,❌❌❌,[],"[[""'n'"", ""0""], [""'~'"", ""0""], [""'\\x86'"", ""0""]]"
uppercase X,128,✅✅✅,ppp,input/codex/checksum/7.txt,[],[],fff,❌❌❌,[],"[[""'n'"", ""'V'""], [""'~'"", ""'f'""], [""'\u00c6'"", ""'\u00ae'""]]",fff,❌❌❌,[],"[[""'n'"", ""48""], [""'~'"", ""96""], [""'\u00c6'"", ""36""]]"
uppercase X,256,✅✅✅,ppp,input/codex/checksum/8.txt,[],[],fff,❌❌❌,[],"[[""'\u00ee'"", ""None""], [""'~'"", ""None""], [""'\u0146'"", ""None""]]",eee,💀💀💀,"[""string index out of range"", ""invalid literal for int() with base 10: 'a'"", ""invalid literal for int() with base 10: 'f'""]",[]
lowercase u,64,✅✅✅,ppp,input/codex/checksum/9.txt,[],[],ppp,✅✅✅,[],[],fff,❌❌❌,[],"[[""'\\x8b'"", ""22""], [""'\\x9b'"", ""38""], [""'\u00a3'"", ""46""]]"
lowercase u,128,✅✅✅,ppp,input/codex/checksum/10.txt,[],[],fff,❌❌❌,[],"[[""'\\x8b'"", ""'\\x16'""], [""'\\x9b'"", ""'&'""], [""'\u00e3'"", ""'n'""]]",fff,❌❌❌,[],"[[""'\\x8b'"", ""22""], [""'\\x9b'"", ""38""], [""'\u00e3'"", ""110""]]"
lowercase u,256,✅✅✅,ppp,input/codex/checksum/11.txt,[],[],fpf,❌✅❌,[],"[[""'\u010b'"", ""'\\x0b'""], [""'\u0163'"", ""'c'""]]",eee,💀💀💀,"[""string index out of range"", ""string index out of range"", ""string index out of range""]",[]
an exclamation mark,64,✅✅✅,ppp,input/codex/checksum/12.txt,[],[],fff,❌❌❌,[],"[[""'7'"", ""'U'""], [""'G'"", ""'e'""], [""'O'"", ""'m'""]]",fff,❌❌❌,[],"[[""'7'"", ""22""], [""'G'"", ""38""], [""'O'"", ""46""]]"
an exclamation mark,128,✅✅✅,ppp,input/codex/checksum/13.txt,[],[],fff,❌❌❌,[],"[[""'7'"", ""'\\x16'""], [""'G'"", ""'&'""], [""'\\x8f'"", ""'n'""]]",fff,❌❌❌,[],"[[""'7'"", ""6""], [""'G'"", ""22""], [""'\\x8f'"", ""126""]]"
an exclamation mark,256,✅✅✅,ppp,input/codex/checksum/14.txt,[],[],ppf,✅✅❌,[],"[[""'\u010f'"", ""'\\x0f'""]]",eee,💀💀💀,"[""string index out of range"", ""invalid literal for int() with base 10: 'a'"", ""invalid literal for int() with base 10: 'f'""]",[]
a question mark,64,✅✅✅,ppp,input/codex/checksum/15.txt,[],[],fff,❌❌❌,[],"[[""'U'"", ""'V'""], [""'e'"", ""'f'""], [""'m'"", ""'n'""]]",fee,❌💀💀,"[""invalid literal for int() with base 10: 'a'"", ""invalid literal for int() with base 10: 'f'""]","[[""'U'"", ""6""]]"
a question mark,128,✅✅✅,ppp,input/codex/checksum/16.txt,[],[],fff,❌❌❌,[],"[[""'U'"", ""'\\x16'""], [""'e'"", ""'&'""], [""'\\xad'"", ""'n'""]]",fee,❌💀💀,"[""invalid literal for int() with base 10: 'a'"", ""invalid literal for int() with base 10: 'f'""]","[[""'U'"", ""6""]]"
a question mark,256,✅✅✅,ppp,input/codex/checksum/17.txt,[],[],ppp,✅✅✅,[],[],fff,❌❌❌,[],"[[""'\u00d5'"", ""6""], [""'e'"", ""150""], [""'\u012d'"", ""254""]]"

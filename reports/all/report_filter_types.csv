type,example_input,result_emojis,result,model_input,failed_inputs,errors,incoder_result,incoder_result_emojis,errors,failed_inputs,codeparrot_result,codeparrot_result_emojis,errors,failed_inputs
string,"['a', 3.14, 5]",✅✅,pp,input/codex/filter_types/0.txt,[],[],pp,✅✅,[],[],ff,❌❌,[],"[[""['adasd']"", ""['4', '23.2', '9', 'adasd']""], [""['c', 'a', 'b']"", ""['3', 'c', '3', '3', 'a', 'b']""]]"
string,"[1, 2, 3, 3.6, 'abc', {}, [], (1,)]",✅✅,pp,input/codex/filter_types/1.txt,[],[],pp,✅✅,[],[],ff,❌❌,[],"[[""['adasd']"", ""['4', '23.2', '9', 'adasd']""], [""['c', 'a', 'b']"", ""['3', 'c', '3', '3', 'a', 'b']""]]"
integer,"['a', 3.14, 5]",✅✅,pp,input/codex/filter_types/2.txt,[],[],pp,✅✅,[],[],fp,❌✅,[],"[[""[4, 9]"", ""[4]""]]"
integer,"[1, 2, 3, 3.6, 'abc', {}, [], (1,)]",✅✅,pp,input/codex/filter_types/3.txt,[],[],pp,✅✅,[],[],fp,❌✅,[],"[[""[4, 9]"", ""[4]""]]"
float,"['a', 3.14, 5]",✅✅,pp,input/codex/filter_types/4.txt,[],[],pp,✅✅,[],[],ee,💀💀,"[""float() argument must be a string or a number, not 'dict'"", ""could not convert string to float: 'c'""]",[]
float,"[1, 2, 3, 3.6, 'abc', {}, [], (1,)]",✅✅,pp,input/codex/filter_types/5.txt,[],[],pp,✅✅,[],[],ee,💀💀,"[""float() argument must be a string or a number, not 'dict'"", ""could not convert string to float: 'c'""]",[]
dictionary,"['a', 3.14, 5]",✅✅,pp,input/codex/filter_types/6.txt,[],[],pp,✅✅,[],[],ff,❌❌,[],"[[""[{}]"", ""[{'name': 4, 'value': 4, 'type': 'dictionarys'}, {'name': {}, 'value': {}, 'type': 'dictionarys'}, {'name': [], 'value': [], 'type': 'dictionarys'}, {'name': 23.2, 'value': 23.2, 'type': 'dictionarys'}, {'name': 9, 'value': 9, 'type': 'dictionarys'}, {'name': 'adasd', 'value': 'adasd', 'type': 'dictionarys'}]""], [""[]"", ""[{'name': 3, 'value': 3, 'type': 'dictionarys'}, {'name': 'c', 'value': 'c', 'type': 'dictionarys'}, {'name': 3, 'value': 3, 'type': 'dictionarys'}, {'name': 3, 'value': 3, 'type': 'dictionarys'}, {'name': 'a', 'value': 'a', 'type': 'dictionarys'}, {'name': 'b', 'value': 'b', 'type': 'dictionarys'}]""]]"
dictionary,"[1, 2, 3, 3.6, 'abc', {}, [], (1,)]",✅✅,pp,input/codex/filter_types/7.txt,[],[],pp,✅✅,[],[],ee,💀💀,"[""'int' object is not subscriptable"", ""'int' object is not subscriptable""]",[]
list,"['a', 3.14, 5]",✅✅,pp,input/codex/filter_types/8.txt,[],[],pp,✅✅,[],[],ff,❌❌,[],"[[""[[]]"", ""[4, 23.2, 9, 'adasd']""], [""[]"", ""[3, 'c', 3, 3, 'a', 'b']""]]"
list,"[1, 2, 3, 3.6, 'abc', {}, [], (1,)]",✅✅,pp,input/codex/filter_types/9.txt,[],[],pp,✅✅,[],[],ff,❌❌,[],"[[""[[]]"", ""[4, 23.2, 9, 'adasd']""], [""[]"", ""[3, 'c', 3, 3, 'a', 'b']""]]"
tuple,"['a', 3.14, 5]",✅✅,pp,input/codex/filter_types/10.txt,[],[],pp,✅✅,[],[],ee,💀💀,"[""'int' object is not iterable"", ""'int' object is not iterable""]",[]
tuple,"[1, 2, 3, 3.6, 'abc', {}, [], (1,)]",✅✅,pp,input/codex/filter_types/11.txt,[],[],pp,✅✅,[],[],ee,💀💀,"[""'int' object is not iterable"", ""'int' object is not iterable""]",[]
